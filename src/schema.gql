type Channel {
	id: ID!
	name: String!
	messages: [Message]
}

type Message {
	channelId: ID!
	messageId: ID!
	content: String!
	createdAt: String!
	nickname: String!
	email: String!
	picture: String!
}

type Mutation {
	putChannel(id: ID!, name: String!): Channel
	putMessage(
		channelId: ID!,
		messageId: ID!,
		content: String!,
		createdAt: String!
	): Message
}

type Query {
	allChannels: [Channel]
	#Get a single value of type 'Channel' by primary key.
	getChannel(id: ID!): Channel
	getChannelMessages(channelId: ID!): [Message]
}

type Subscription {
	subscribeToChannelMessages(channelId: String!): Message
		@aws_subscribe(mutations: ["putMessage"])
	putChannel: Channel
		@aws_subscribe(mutations: ["putChannel"])
}

schema {
	query: Query
	mutation: Mutation
	subscription: Subscription
}
